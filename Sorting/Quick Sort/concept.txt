Quick Sort Algorithm

1. Pick up a pivot

Pivot can be anything -
- 1st element of the array --> we'll go with this
- last element of the array
- median of the array
- random element of the array

2. Place it at the correct place in the sorted array
3. Smaller on the left, larger on the right



Let's see this with an example - 
4 6 2 5 7 9 1 3

so as per our rule we're taking 1st elem - 4 as the pivot.

put 2 pointers low and high - low on the 1st and high on the last element
put another 2 pointers i and j - i on 1st and j on last element

compare i with the pivot 
if i < pivot - move the pointer i to the right by 1.
if i > pivot - swap it with j and move the pointer j towards left by 1

repeat this step till the i > j - we've to stop here (j crosses i)
last step - swap the low with the j and hence we are done.

now the j is called as the partition of the array because it is sorted and left and right needs to be sorted
we are doing this to find the place where we have to break the array into 2 parts.

so now the new 2 arrays would be -
1. low to partition - 1
2. partition + 1 to high


Time Complexity - O(N log N)
